#############################################################################
# Makefile for building: VisualConfig
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Mon Dec 21 19:10:21 2015
# Project:  VisualConfig.pro
# Template: app
# Command: $(QMAKE) -o Makefile VisualConfig.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O3 -g -march=loongson3a -mabi=64 -fno-strict-aliasing  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O3 -g -march=loongson3a -mabi=64 -fno-strict-aliasing  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = mainwindow.h \
		xmlmodifier.h \
		helpinfo.h
SOURCES = main.cpp \
		mainwindow.cpp \
		xmlmodifier.cpp \
		helpinfo.cpp
OBJECTS = main.o \
		mainwindow.o \
		xmlmodifier.o \
		helpinfo.o \
		mainwindow.o \
		helpinfo.o
FORMS = mainwindow.ui \
		helpinfo.ui
UICDECLS = mainwindow.h \
		helpinfo.h
UICIMPLS = mainwindow.cpp \
		helpinfo.cpp
SRCMOC   = moc_mainwindow.cpp \
		moc_helpinfo.cpp \
		moc_mainwindow.cpp \
		moc_helpinfo.cpp
OBJMOC = moc_mainwindow.o \
		moc_helpinfo.o \
		moc_mainwindow.o \
		moc_helpinfo.o
DIST	   = VisualConfig.pro
QMAKE_TARGET = VisualConfig
DESTDIR  = 
TARGET   = VisualConfig

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: VisualConfig.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile VisualConfig.pro
qmake: 
	@$(QMAKE) -o Makefile VisualConfig.pro

dist: 
	@mkdir -p .tmp/VisualConfig && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/VisualConfig/ && ( cd `dirname .tmp/VisualConfig` && $(TAR) VisualConfig.tar VisualConfig && $(GZIP) VisualConfig.tar ) && $(MOVE) `dirname .tmp/VisualConfig`/VisualConfig.tar.gz . && $(DEL_FILE) -r .tmp/VisualConfig

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp mainwindow.h \
		xmlmodifier.h \
		helpinfo.h

mainwindow.o: mainwindow.cpp ui_mainwindow.h \
		mainwindow.h

xmlmodifier.o: xmlmodifier.cpp xmlmodifier.h

helpinfo.o: helpinfo.cpp helpinfo.h \
		helpinfo.h

mainwindow.h: mainwindow.ui 
	$(UIC) mainwindow.ui -o mainwindow.h

mainwindow.cpp: mainwindow.h mainwindow.ui 
	$(UIC) mainwindow.ui -i mainwindow.h -o mainwindow.cpp

helpinfo.h: helpinfo.ui 
	$(UIC) helpinfo.ui -o helpinfo.h

helpinfo.cpp: helpinfo.h helpinfo.ui 
	$(UIC) helpinfo.ui -i helpinfo.h -o helpinfo.cpp

mainwindow.o: mainwindow.cpp ui_mainwindow.h \
		mainwindow.h

helpinfo.o: helpinfo.cpp helpinfo.h \
		helpinfo.h

moc_mainwindow.o: moc_mainwindow.cpp  mainwindow.h xmlmodifier.h \
		helpinfo.h

moc_helpinfo.o: moc_helpinfo.cpp  helpinfo.h 

moc_mainwindow.o: moc_mainwindow.cpp  mainwindow.h xmlmodifier.h \
		helpinfo.h

moc_helpinfo.o: moc_helpinfo.cpp  helpinfo.h 

moc_mainwindow.cpp: $(MOC) mainwindow.h
	$(MOC) mainwindow.h -o moc_mainwindow.cpp

moc_helpinfo.cpp: $(MOC) helpinfo.h
	$(MOC) helpinfo.h -o moc_helpinfo.cpp

moc_mainwindow.cpp: $(MOC) mainwindow.h
	$(MOC) mainwindow.h -o moc_mainwindow.cpp

moc_helpinfo.cpp: $(MOC) helpinfo.h
	$(MOC) helpinfo.h -o moc_helpinfo.cpp

####### Install

install:  

uninstall:  

